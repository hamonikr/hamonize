<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.mapper.IAuditLogMapper">
	
	<select id="pcMntrngListInfo" resultType="com.model.PcMangrVo"  parameterType="com.model.PcMangrVo">
		SELECT 
			seq,
			pc_hostname,
			pc_uuid
		FROM tbl_pc_mangr
		<where>
		<if test="org_seq != 1 ">
				org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
					from tbl_org a
					where a.seq = #{org_seq}
					union all
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
					from tbl_org a, search_org so 
					where a.p_seq = so.seq and not cycle)
					select seq
					from search_org
				)
		</if>
		</where>
		 
	</select>
	
	
	<select id="userLogListInfo" resultType="com.model.AuditLogVo" parameterType="hashmap">
		SELECT  a.seq, 
		to_char(a.login_dt,'YYYY-MM-DD HH24:MI:SS.MS') as login_dt, 
		to_char(a.logout_dt,'YYYY-MM-DD HH24:MI:SS.MS') as logout_dt, 
		to_char(age(a.logout_dt,a.login_dt),'YYYY-MM-DD HH24:MI:SS.MS') as spent_time,
		(select UPPER(pc_hostname) from tbl_pc_mangr where pc_uuid = a.uuid) as pc_hostname
		,b.seq,b.user_sabun,b.user_id,b.user_name,b.org_seq,
		(select org_nm from tbl_org where seq=b.org_seq) as join_org_nm,
		(select org_nm from tbl_org where seq = (select org_seq from tbl_pc_mangr where pc_uuid = a.uuid))as org_nm,
			case when b.rank = '001' then '이병'
				when b.rank = '002' then '일병'
				when b.rank = '003' then '상병'
				when b.rank = '004' then '병장'
				when b.rank = '100' then '관리자'
				else '훈련병'
			end as rank
			 FROM (select * from tbl_loginout order by login_dt desc) a 
			 left outer join tbl_user b
			 on a.seq = b.seq
		<where>
		1=1
		<if test="auditLogVo.org_seq != null and auditLogVo.org_seq != ''" >
		and b.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
					from tbl_org a
					where a.seq = #{auditLogVo.org_seq}
					union all
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
					from tbl_org a, search_org so 
					where a.p_seq = so.seq and not cycle)
					select seq
					from search_org
				)
		</if>
		
		<if test="auditLogVo.keyWord == 1">
		and b.user_name like '%' || #{auditLogVo.txtSearch} || '%'
		</if>
		<if test="auditLogVo.keyWord == 2">
		and b.user_id like '%' || #{auditLogVo.txtSearch} || '%'
		</if>
		<if test="auditLogVo.keyWord == 3">
		and (select org_nm from tbl_org where seq = (select org_seq from tbl_pc_mangr where pc_uuid = a.uuid)) = #{auditLogVo.txtSearch}
		</if>
		<if test="auditLogVo.keyWord == 4">
		and (select org_nm from tbl_org where seq=b.org_seq) =  #{auditLogVo.txtSearch}
		</if>
		<if test="auditLogVo.keyWord == 5">
		and (select UPPER(pc_hostname) from tbl_pc_mangr where pc_uuid = a.uuid) like '%' || UPPER(#{auditLogVo.txtSearch}) || '%'
		</if>
		<if test="auditLogVo.keyWord == 0">
			and (b.user_name like '%' || #{auditLogVo.txtSearch} || '%'
			or b.user_id like '%' || #{auditLogVo.txtSearch} || '%'
			or (select org_nm from tbl_org where seq = (select org_seq from tbl_pc_mangr where pc_uuid = a.uuid)) = #{auditLogVo.txtSearch}
			or (select org_nm from tbl_org where seq=b.org_seq) =  #{auditLogVo.txtSearch}
			or (select UPPER(pc_hostname) from tbl_pc_mangr where pc_uuid = a.uuid) like '%' || UPPER(#{auditLogVo.txtSearch}) || '%'
			)
		</if>
		</where> 
		--order by a.login_dt desc
		OFFSET #{pagingVo.limitStart} LIMIT #{pagingVo.recordSize}
		
	</select>
	
	
	<select id="countUserLogListInfo" parameterType="com.model.AuditLogVo" resultType="Integer">
		SELECT 
			count(*)  as tbl_cnt
		FROM tbl_loginout a 
 		left outer join tbl_user b
 		on a.seq = b.seq
		<where>
		1=1
		<if test="org_seq != null and org_seq != ''">
		and b.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
					from tbl_org a
					where a.seq = #{org_seq}
					union all
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
					from tbl_org a, search_org so 
					where a.p_seq = so.seq and not cycle)
					select seq
					from search_org
				)
		</if>
		<if test="keyWord == 1">
		and b.user_name like '%' || #{txtSearch} || '%'
		</if>
		<if test="keyWord == 2">
		and b.user_id like '%' || #{txtSearch} || '%'
		</if>
		<if test="keyWord == 3">
		and (select org_nm from tbl_org where seq = (select org_seq from tbl_pc_mangr where pc_uuid = a.uuid)) = #{txtSearch}
		</if>
		<if test="keyWord == 4">
		and (select org_nm from tbl_org where seq=b.org_seq) =  #{txtSearch}
		</if>
		<if test="keyWord == 5">
		and (select UPPER(pc_hostname) from tbl_pc_mangr where pc_uuid = a.uuid) like '%' || UPPER(#{txtSearch}) || '%'
		</if>
		<if test="keyWord == 0">
			and (b.user_name like '%' || #{txtSearch} || '%'
			or b.user_id like '%' || #{txtSearch} || '%'
			or (select org_nm from tbl_org where seq = (select org_seq from tbl_pc_mangr where pc_uuid = a.uuid)) = #{txtSearch}
			or (select org_nm from tbl_org where seq=b.org_seq) =  #{txtSearch}
			or (select UPPER(pc_hostname) from tbl_pc_mangr where pc_uuid = a.uuid) like '%' || UPPER(#{txtSearch}) || '%'
			)
		</if>
		</where> 
	</select>
	
	<select id="userLogListExcel" resultType="hashmap" parameterType="com.model.AuditLogVo">
		SELECT  
		(ROW_NUMBER() OVER()) AS rownum,
		b.user_sabun,
		case when b.rank = '001' then '이병'
				when b.rank = '002' then '일병'
				when b.rank = '003' then '상병'
				when b.rank = '004' then '병장' 
				when b.rank = '100' then '관리자' 
				else '훈련병'
			end as rank,
			b.user_name,
			b.user_id,
		to_char(a.login_dt,'YYYY-MM-DD HH24:MI:SS.MS') as login_dt, 
		to_char(a.logout_dt,'YYYY-MM-DD HH24:MI:SS.MS') as logout_dt, 
		to_char(age(a.logout_dt,a.login_dt),'YYYY-MM-DD HH24:MI:SS.MS') as spent_time,
		(select org_nm from tbl_org where seq = (select org_seq from tbl_pc_mangr where pc_uuid = a.uuid))as org_nm,
		(select org_nm from tbl_org where seq=b.org_seq) as join_org_nm
			 FROM tbl_loginout a 
			 left outer join tbl_user b
			 on a.seq = b.seq
			 <where>
			 <if test="org_seq != null and org_seq != ''" >
				and b.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
			    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
			    from tbl_org a
			    where a.seq = #{org_seq}
			    union all
			    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
			    from tbl_org a, search_org so 
			    where a.p_seq = so.seq and not cycle)
			    select seq
			    from search_org
				)
			</if>
			<if test="date_fr != null and date_fr != ''">
				<![CDATA[
				and to_char(login_dt,'yyyymmdd') >= #{date_fr}
				]]>
				</if>
				<if test="date_to != null and date_to != ''">
				<![CDATA[
				and to_char(login_dt,'yyyymmdd') <= #{date_to}
				]]>
			</if>
			<if test="keyWord == 1">
				and b.user_name like '%' || #{txtSearch} || '%'
				</if>
				<if test="keyWord == 2">
				and b.user_id like '%' || #{txtSearch} || '%'
				</if>
				<if test="keyWord == 0">
				and (b.user_name like '%' || #{txtSearch} || '%'
				or b.user_id like '%' || #{txtSearch} || '%')
			</if>
			 </where>
			 </select>
	
	
	<select id="iNetLogListInfo" resultType="com.model.AuditLogVo" parameterType="hashmap">
		SELECT
		a.user_id,a.pc_ip,a.cnnc_url,a.pc_uuid,a.hostname,
		case when a.state = 'start' then '브라우저시작'
				when a.state = 'stop' then '브라우저종료'
				when a.state = 'connect' then '인터넷접속'
				when a.state = 'Illegal' then '유해사이트접속' 
				else ''
			end as state, 
		to_char(a.reg_dt,'YYYY-MM-DD HH24:MI:SS.MS') as reg_dt,
		to_char(a.insert_dt,'YYYY-MM-DD HH24:MI:SS') as insert_dt,
		b.user_name,b.org_seq,
			case when b.rank = '001' then '이병'
				when b.rank = '002' then '일병'
				when b.rank = '003' then '상병'
				when b.rank = '004' then '병장' 
				when b.rank = '100' then '관리자' 
				else '훈련병'
			end as rank
			 FROM (select * from tbl_inet_log order by reg_dt desc) a 
			 join tbl_user b
			 on a.user_id = b.user_id
		<where>
		1=1
		<if test="auditLogVo.org_seq != null and auditLogVo.org_seq != ''">
		and b.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{auditLogVo.org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		<if test="auditLogVo.date_fr != null and auditLogVo.date_fr != ''">
				<![CDATA[
				and to_char(reg_dt,'yyyymmdd') >= #{auditLogVo.date_fr} 
				]]>
				</if>
				<if test="auditLogVo.date_to != null and auditLogVo.date_to != ''">
				<![CDATA[
				and to_char(reg_dt,'yyyymmdd') <= #{auditLogVo.date_to}
				]]>
			</if>
		<if test="auditLogVo.keyWord == 1">
		and b.user_name like '%' || #{auditLogVo.txtSearch} || '%'
		</if>
		<if test="auditLogVo.keyWord == 2">
		and b.user_id like '%' || #{auditLogVo.txtSearch} || '%'
		</if>
		<if test="auditLogVo.keyWord == 0">
		and (b.user_name like '%' || #{auditLogVo.txtSearch} || '%'
		or b.user_id like '%' || #{auditLogVo.txtSearch} || '%')
		</if>
		<if test="auditLogVo.prcssname == 1">
			<if test="auditLogVo.txtSearch0 == 1">
			and a.state = 'connect'
			</if>
			<if test="auditLogVo.txtSearch0 == 2">
			and a.state = 'Illegal'
			</if>
			<if test="auditLogVo.txtSearch1 != ''">
			and b.user_name like '%' || #{auditLogVo.txtSearch1} || '%'
			</if>
			<if test="auditLogVo.txtSearch2 != ''">
			and b.user_id like '%' || #{auditLogVo.txtSearch2} || '%'
			</if>
			<if test="auditLogVo.txtSearch3 != ''">
			and a.hostname = #{auditLogVo.txtSearch3}
			</if>
			<if test="auditLogVo.txtSearch4 != ''">
			and a.cnnc_url like '%' || #{auditLogVo.txtSearch4} || '%'
			</if>
			<if test="auditLogVo.txtSearch5 != 0">
			and b.rank = #{auditLogVo.txtSearch5}
			</if>
		</if>
		and cnnc_url != '-c'
		</where> 
		order by a.reg_dt desc
		OFFSET #{pagingVo.limitStart} LIMIT #{pagingVo.recordSize}
		
	</select>
	
	
	<select id="countInetLogListInfo" parameterType="com.model.AuditLogVo" resultType="Integer">
		SELECT 
			count(*)  as tbl_cnt
		FROM tbl_inet_log a 
 		join tbl_user b
 		on a.user_id = b.user_id
		<where>
		1=1
		<if test="org_seq != null and org_seq != ''">
		and b.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		<if test="date_fr != null and date_fr != ''">
				<![CDATA[
				and to_char(reg_dt,'yyyymmdd') >= #{date_fr} 
				]]>
				</if>
				<if test="date_to != null and date_to != ''">
				<![CDATA[
				and to_char(reg_dt,'yyyymmdd') <= #{date_to}
				]]>
			</if>
		<if test="keyWord == 1">
		and b.user_name like '%' || #{txtSearch} || '%'
		</if>
		<if test="keyWord == 2">
		and b.user_id like '%' || #{txtSearch} || '%'
		</if>
		<if test="keyWord == 0">
		and (b.user_name like '%' || #{txtSearch} || '%'
		or b.user_id like '%' || #{txtSearch} || '%')
		</if>
		<if test="prcssname == 1">
			<if test="txtSearch0 == 1">
			and a.state = 'connect'
			</if>
			<if test="txtSearch0 == 2">
			and a.state = 'Illegal'
			</if>
			<if test="txtSearch1 != ''">
			and b.user_name like '%' || #{txtSearch1} || '%'
			</if>
			<if test="txtSearch2 != ''">
			and b.user_id like '%' || #{txtSearch2} || '%'
			</if>
			<if test="txtSearch3 != ''">
			and a.hostname = #{txtSearch3}
			</if>
			<if test="txtSearch4 != ''">
			and a.cnnc_url like '%' || #{txtSearch4} || '%'
			</if>
			<if test="txtSearch5 != 0">
			and b.rank = #{txtSearch5}
			</if>
		</if>
		and cnnc_url != '-c'
		</where> 
	</select>
	
	<select id="iNetLogListExcel" resultType="hashmap" parameterType="hashmap">
		SELECT
		(ROW_NUMBER() OVER()) AS rownum,
		a.pc_ip,a.cnnc_url,a.pc_uuid,a.hostname,
		case when a.state = 'start' then '브라우저시작'
				when a.state = 'stop' then '브라우저종료'
				when a.state = 'connect' then '인터넷접속'
				when a.state = 'Illegal' then '유해사이트접속' 
				else ''
			end as state, 
		to_char(a.reg_dt,'YYYY-MM-DD HH24:MI:SS.MS') as reg_dt,
		to_char(a.insert_dt,'YYYY-MM-DD HH24:MI:SS') as insert_dt,
		b.user_id,
		b.user_name,
			case when b.rank = '001' then '이병'
				when b.rank = '002' then '일병'
				when b.rank = '003' then '상병'
				when b.rank = '004' then '병장'
				when b.rank = '100' then '관리자'
				else '훈련병'
			end as rank,
			(select org_nm from tbl_org where seq=b.org_seq) as org_nm
			 FROM tbl_inet_log a 
			 join tbl_user b
			 on a.user_id = b.user_id
			  <where>
			 <if test="org_seq != null and org_seq != ''" >
				and b.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
			</if>
			<if test="date_fr != null and date_fr != ''">
				<![CDATA[
				and to_char(reg_dt,'yyyymmdd') >= #{date_fr} 
				]]>
				</if>
				<if test="date_to != null and date_to != ''">
				<![CDATA[
				and to_char(reg_dt,'yyyymmdd') <= #{date_to}
				]]>
			</if>
			<if test="keyWord == 1">
				and b.user_name like '%' || #{txtSearch} || '%'
				</if>
				<if test="keyWord == 2">
				and b.user_id like '%' || #{txtSearch} || '%'
				</if>
				<if test="keyWord == 0">
				and (b.user_name like '%' || #{txtSearch} || '%'
				or b.user_id like '%' || #{txtSearch} || '%')
			</if>
			<if test="prcssname == 1">
				<if test="txtSearch0 == 1">
				and a.state = 'connect'
				</if>
				<if test="txtSearch0 == 2">
				and a.state = 'Illegal'
				</if>
				<if test="txtSearch1 != ''">
				and b.user_name like '%' || #{txtSearch1} || '%'
				</if>
				<if test="txtSearch2 != ''">
				and b.user_id like '%' || #{txtSearch2} || '%'
				</if>
				<if test="txtSearch3 != ''">
				and a.hostname = #{txtSearch3}
				</if>
				<if test="txtSearch4 != ''">
				and a.cnnc_url like '%' || #{txtSearch4} || '%'
				</if>
				<if test="txtSearch5 != 0">
				and b.rank = #{txtSearch5}
				</if>
			</if>
			and cnnc_url != '-c'
			 </where>
			 </select>
	
	<select id="pcChangeLogListInfo" resultType="com.model.AuditLogVo" parameterType="hashmap">
		SELECT
			pc_cpu, 
			pc_memory, 
			pc_disk, 
			pc_macaddress, 
			pc_ip, 
			pc_hostname, 
			pc_disk_id, 
			pc_cpu_id, 
			pc_uuid, 
			insert_dt
			from tbl_pc_change_info
		<where>
		<if test="auditLogVo.org_seq != null and auditLogVo.org_seq != ''">
		org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{auditLogVo.org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		</where> 
		order by insert_dt desc
		OFFSET #{pagingVo.limitStart} LIMIT #{pagingVo.recordSize}
		
	</select>
	
	
	<select id="countPcChangeLogListInfo" parameterType="com.model.AuditLogVo" resultType="Integer">
		SELECT 
			count(*)  as tbl_cnt
		FROM tbl_pc_change_info 
		<where>
			<if test="org_seq != null and org_seq != ''">
			org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		</where> 
	</select>
	
	<select id="unAuthLogListInfo" resultType="com.model.AuditLogVo" parameterType="hashmap">
		SELECT
			uuid, 
			vendor, 
			product, 
			info, 
			pc_user, 
			insert_dt
			from tbl_unauthroized 
		<where>
		<if test="auditLogVo.org_seq != null and auditLogVo.org_seq != ''">
		org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
					from tbl_org a
					where a.seq = #{auditLogVo.org_seq}
					union all
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
					from tbl_org a, search_org so 
					where a.p_seq = so.seq and not cycle)
					select seq
					from search_org
				)
		</if>
		</where> 
		order by insert_dt desc
		OFFSET #{pagingVo.limitStart} LIMIT #{pagingVo.recordSize}
		
	</select>
	
	
	<select id="countUnAuthLogListInfo" parameterType="com.model.AuditLogVo" resultType="Integer">
		SELECT 
			count(*)  as tbl_cnt
		FROM tbl_unauthroized 
		<where>
			<if test="org_seq != null and org_seq != ''">
			org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
					from tbl_org a
					where a.seq = #{org_seq}
					union all
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
					from tbl_org a, search_org so 
					where a.p_seq = so.seq and not cycle)
					select seq
					from search_org
				)
		</if>
		</where> 
	</select>
	
	<select id="unAuthLogListExcel" resultType="hashmap" parameterType="hashmap">
		SELECT
		(ROW_NUMBER() OVER()) AS rownum,
		a.uuid,a.vendor,a.product,a.info,
		a.pc_user,a.insert_dt,
			(select org_nm from tbl_org where seq=b.org_seq) as org_nm
			 FROM tbl_unauthroized a 
			 join tbl_user b
			 on a.pc_user = b.user_id
			  <where>
			 <if test="org_seq != null and org_seq != ''" >
				and b.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
			</if>
			 </where>
			 </select>
	
	<select id="prcssBlockLogListInfo" resultType="com.model.AuditLogVo" parameterType="hashmap">
		SELECT
		HOSTNAME,
		(select org_nm from tbl_org where seq = org_seq)as ORG_NM,
		PRCSSNAME,
		ipaddress,
		macaddress,
		INSERT_DT,
		USER_ID,
		ORG_SEQ
		FROM TBL_PRCSS_BLOCK_LOG
		<where>
		1=1
		<if test="auditLogVo.org_seq != null and auditLogVo.org_seq != ''">
		and org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{auditLogVo.org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		<if test="auditLogVo.keyWord == 1">
		and (select org_nm from tbl_org where seq = org_seq) =  #{auditLogVo.txtSearch}
		</if>
		<if test="auditLogVo.keyWord == 2">
		and user_id like '%' || #{auditLogVo.txtSearch} || '%'
		</if>
		<if test="auditLogVo.keyWord == 0">
		and ((select org_nm from tbl_org where seq = org_seq) like '%' || #{auditLogVo.txtSearch} || '%'
		or user_id like '%' || #{auditLogVo.txtSearch} || '%')
		</if>
		</where> 
		order by insert_dt desc
		OFFSET #{pagingVo.limitStart} LIMIT #{pagingVo.recordSize}
		
	</select>
	
	
	<select id="countPrcssBlockLogListInfo" parameterType="com.model.AuditLogVo" resultType="Integer">
		SELECT 
			count(*)  as tbl_cnt
		FROM TBL_PRCSS_BLOCK_LOG 
		<where>
		1=1
		<if test="org_seq != null and org_seq != ''">
		and org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		<if test="keyWord == 1">
		and (select org_nm from tbl_org where seq = org_seq) = #{txtSearch} 
		</if>
		<if test="keyWord == 2">
		and user_id like '%' || #{txtSearch} || '%'
		</if>
		<if test="keyWord == 0">
		and ((select org_nm from tbl_org where seq = org_seq) like '%' || #{txtSearch} || '%'
		or user_id like '%' || #{txtSearch} || '%')
		</if>
		</where> 
	</select>
	
	<select id="prcssBlockLogListExcel" resultType="hashmap" parameterType="hashmap">
		SELECT
		(ROW_NUMBER() OVER()) AS rownum,
		HOSTNAME,
		(select org_nm from tbl_org where seq = org_seq)as ORG_NM,
		PRCSSNAME,
		ipaddress,
		macaddress,
		INSERT_DT,
		USER_ID,
		ORG_SEQ
		FROM TBL_PRCSS_BLOCK_LOG
			  <where>
			 <if test="org_seq != null and org_seq != ''" >
				and org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
			</if>
			<if test="date_fr != null and date_fr != ''">
				<![CDATA[
				and to_date(insert_dt,'yyyy/mm/dd') >= #{date_fr}::date
				]]>
				</if>
				<if test="date_to != null and date_to != ''">
				<![CDATA[
				and to_date(insert_dt,'yyyy/mm/dd') <= #{date_to}::date
				]]>
			</if>
			<if test="keyWord == 1">
				and (select org_nm from tbl_org where seq = org_seq) = #{txtSearch}
				</if>
				<if test="keyWord == 2">
				and user_id like '%' || #{txtSearch} || '%'
				</if>
				<if test="keyWord == 0">
				and ((select org_nm from tbl_org where seq = org_seq) like '%' || #{txtSearch} || '%'
				or user_id like '%' || #{txtSearch} || '%')
			</if>
			 </where>
			 </select>
			 
			 <!-- 업데이트 정책 배포 -->
			 <select id="udptPackageList" resultType="String">
				SELECT PU_NAME FROM TBL_PROGRM_UDPT
			 </select>
			 
			 <select id="updtList" resultType="map" parameterType="hashmap" >
				    <foreach collection="debList" item="item" index="index">
						(select
							    *
						  from
						    tbl_updt_policy_action_result tb1
						    ,tbl_progrm_udpt tb2
						  where
						    tb1.debname = tb2.pu_name
						    --and tb1.debver = tb2.deb_new_version
						    and tb1.pc_uuid = #{uuid}
						    and tb1.debname = #{item}  
						  order by
						    tb1.insert_dt desc limit 1)
						     <if test="debListCnt > index+1">
				            	UNION ALL
				            </if>
					</foreach>
			 </select>
			 
			 <!-- 프로그램 차단 정책 배포 -->
			 <select id="programPackageList" resultType="String">
				SELECT pcm_name
					FROM tbl_program_mngr
			 </select>
			 <select id="programList" resultType="map" parameterType="hashmap" >
				    <foreach collection="debList" item="item" index="index">
						(select
						    *
						  from
						    tbl_act_progrm_log tb1
						    ,tbl_program_mngr tb2
						  where
						    tb1.progrmname = tb2.pcm_name
						    and tb1.uuid = #{uuid}
						    and tb1.progrmname =  #{item} 
						  order by
						    tb1.ins_date desc limit 1)
						     <if test="debListCnt > index+1">
				            	UNION ALL
				            </if>
					</foreach>
			 </select>
			 
			 <!-- 방화벽 허용 정책 배포 -->
			 <select id="firewallPackageList" resultType="String">
				SELECT sm_port
					FROM tbl_security_mngr where sm_gubun='P'
			 </select>
			 <select id="firewallList" resultType="map" parameterType="hashmap" >
				    <foreach collection="debList" item="item" index="index">
						(select
						    *
						  from
						    tbl_act_firewall_log tb1
						    ,tbl_security_mngr tb2
						  where
						    tb1.retport = tb2.sm_port
						    and tb1.uuid = #{uuid}
						    and tb1.retport =  #{item} 
						  order by
						    tb1.ins_date desc limit 1)
						     <if test="debListCnt > index+1">
				            	UNION ALL
				            </if>
					</foreach>
			 </select>
			 
			 <!-- 디바이스 허용 정책 배포 -->
			 <select id="devicePackageList" resultType="String">
				SELECT sm_name
					FROM tbl_security_mngr where sm_gubun='D'
			 </select>
			 <select id="deviceList" resultType="map" parameterType="hashmap" >
				    <foreach collection="debList" item="item" index="index">
						(select
						    *
						  from
						    tbl_act_device_log tb1
						    ,tbl_security_mngr tb2
						  where
						    tb1.product = tb2.sm_name
						    and tb1.uuid = #{uuid}
						    and tb1.product =  #{item} 
						  order by
						    tb1.ins_date desc limit 1)
						     <if test="debListCnt > index+1">
				            	UNION ALL
				            </if>
					</foreach>
			 </select>
			 
			 <!-- 유해사이트 정책 배포 -->
			 <select id="nxssList" resultType="map" parameterType="hashmap" >
				    (select
						    *
						  from
						    tbl_act_nxss_log tb1
						  where
						     tb1.uuid = #{uuid}
						  order by
						    tb1.ins_date desc limit 2)
			 </select>
		
</mapper>
