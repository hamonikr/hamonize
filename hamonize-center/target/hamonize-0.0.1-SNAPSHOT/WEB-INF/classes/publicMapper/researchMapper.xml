<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.mapper.IResearchMapper">

	<select id="dayUsePc" resultType="hashmap" parameterType="com.model.ResearchVo">
		<![CDATA[
		SELECT 
		  trunc(avg(pc_cnt))pc_count,
		  to_char(insert_dt, 'yyyy-mm-dd') as insert_dt
		FROM 
		  tbl_current_pc
		WHERE 
		to_char(insert_dt,'yyyymmdd') >= #{date_fr} and to_char(insert_dt,'yyyymmdd') <= #{date_to}
		GROUP BY 
		  to_char(insert_dt, 'yyyy-mm-dd')
		]]>
	</select>
	<select id="loginList" resultType="hashmap" parameterType="com.model.ResearchVo">
		<![CDATA[
		select count(distinct uuid)as user_count ,
  		to_char(login_dt, 'yyyy-mm-dd') as login_dt
  			from tbl_loginout 
  		WHERE 
			to_char(login_dt,'yyyymmdd') >= #{date_fr} and to_char(login_dt,'yyyymmdd') <= #{date_to}
		GROUP BY 
  		to_char(login_dt, 'yyyy-mm-dd')
  		]]>
	</select>
	
	<select id="dayUseUser" resultType="hashmap" parameterType="com.model.ResearchVo">
	<![CDATA[
		select count(*)as user_count, to_char(login_dt,'yyyy-mm-dd') as login_dt from tbl_loginout where to_char(login_dt,'yyyymmdd') >= #{date_fr} and to_char(login_dt,'yyyymmdd') <= #{date_to} 
	and (select org_seq from tbl_pc_mangr a where a.sgb_pc_uuid = uuid) in (with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org)
    GROUP BY 
  to_char(login_dt, 'yyyy-mm-dd')
  ]]>
	</select>
	
	<select id="distionctDayUseUser" resultType="hashmap" parameterType="com.model.ResearchVo">
	<![CDATA[
		select count(distinct sidx) as user_count, to_char(login_dt,'yyyy-mm-dd') as login_dt from tbl_loginout where to_char(login_dt,'yyyymmdd') >= #{date_fr} and to_char(login_dt,'yyyymmdd') <= #{date_to} 
	and (select org_seq from tbl_pc_mangr a where a.sgb_pc_uuid = uuid) in (with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org)
    GROUP BY 
  to_char(login_dt, 'yyyy-mm-dd')
  ]]>
	</select>
	
	<select id="monthUsePc" resultType="hashmap" parameterType="com.model.ResearchVo">
	<![CDATA[
		SELECT
    to_char((sum(age(logout_dt,login_dt))), 'HH24:MI:SS.MS') as spent_time
    ,to_char(login_dt, 'yyyy-mm') as login_dt
  FROM
    public.tbl_loginout
  where
    to_char(login_dt, 'yyyymmdd') >= #{date_fr} and to_char(login_dt, 'yyyymmdd') <= #{date_to}
    and to_char(age(logout_dt,login_dt), 'HH24:MI:SS.MS') is not null
    and (select org_seq from tbl_pc_mangr a where a.sgb_pc_uuid = uuid) in (with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org)
    GROUP BY 
  	to_char(login_dt, 'yyyy-mm')
    ]]>
	</select>
	
	<select id="pcCountUnit" resultType="hashmap" parameterType="com.model.ResearchVo">
	<![CDATA[
		select a.org_seq, a.count, b.org_nm, b.all_org_nm from 
		(select org_seq ,count(*) from public.tbl_pc_mangr where sgb_pc_os = 'H' group by org_seq) as a
		inner join
		(select * from public.tbl_org where section = 'S') as b on a.org_seq = b.seq
    ]]>
	</select>
	
	<select id="dayTotalPc" resultType="hashmap" parameterType="com.model.ResearchVo">
	<![CDATA[
		select count(distinct uuid) as pc_count, to_char(login_dt,'yyyy-mm-dd')as login_dt from tbl_loginout where to_char(login_dt,'yyyymmdd') >= #{date_fr}   
		and to_char(login_dt,'yyyymmdd') <= #{date_to}
		and (select org_seq from tbl_pc_mangr a where a.sgb_pc_uuid = uuid) 
		in 
		(with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) 
		as ( select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false    
		from tbl_org a    
		where a.seq = #{org_seq}    
		union all    
		select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)    
		from tbl_org a, search_org so    
		where a.p_seq = so.seq and not cycle)    
		select seq    from search_org)
    GROUP BY 
  	to_char(login_dt, 'yyyy-mm-dd')
  ]]>
	</select>
	
	<select id="dayTotalUser" resultType="hashmap" parameterType="com.model.ResearchVo">
	<![CDATA[
		select count(distinct sidx) as user_count, to_char(login_dt,'yyyy-mm-dd')as login_dt from tbl_loginout where to_char(login_dt,'yyyymmdd') >= #{date_fr}   
		and to_char(login_dt,'yyyymmdd') <= #{date_to}
		and (select org_seq from tbl_pc_mangr a where a.sgb_pc_uuid = uuid) 
		in 
		(with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) 
		as ( select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false    
		from tbl_org a    
		where a.seq = #{org_seq}    
		union all    
		select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)    
		from tbl_org a, search_org so    
		where a.p_seq = so.seq and not cycle)    
		select seq    from search_org)
    GROUP BY 
  	to_char(login_dt, 'yyyy-mm-dd')
  ]]>
	</select>
	
	
	<select id="userList" resultType="com.model.ResearchVo"  parameterType="com.model.ResearchVo">
		SELECT 
			a.idx, 
			a.user_gunbun, 
			a.user_id, 
			a.pass_wd, 
			a.user_name, 
			to_char(a.insert_dt, 'YYYY-MM-DD') as insert_dt, 
			to_char(a.update_dt, 'YYYY-MM-DD') as update_dt, 
			a.kind,
			case when a.rank = '002' then '사원'
			when a.rank = '003' then '부서장'
			when a.rank = '004' then '부문장'
			when a.rank = '005' then '대표' 
			else ''
			end as rank , 
			a.discharge_dt, 
			a.org_seq,
			(select org_nm from tbl_org where seq = (select p_seq from tbl_org b where a.org_seq = b.seq)) as p_org_nm,
			(select org_nm from tbl_org where seq = (select seq from tbl_org b where a.org_seq = b.seq)) as org_nm,
			a.narasarang_no
		FROM tbl_user a
		<where>
		1=1
		<if test="org_seq != 1 ">
				and a.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
					from tbl_org a
					where a.seq = #{org_seq}
					union all
					select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
					from tbl_org a, search_org so 
					where a.p_seq = so.seq and not cycle)
					select seq
					from search_org
								)
		</if>
		<if test="date_fr != null and date_fr != ''">
		<![CDATA[
		and first_date >= #{date_fr}::date 
		]]>
		</if>
		<if test="date_to != null and date_to != ''">
		<![CDATA[
		and first_date <= #{date_to}::date 
		]]>
		</if>
		<if test="txtSearch != null " >
			<if test="keyWord == 1 " >
				and a.user_name like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 2 " >
				and a.user_id like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 3 " >
				and (select org_nm from tbl_org where seq = (select p_seq from tbl_org b where a.org_seq = b.seq)) like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 4 " >
				and a.user_gunbun like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 0 " >
				and (a.user_name like '%' || #{txtSearch} || '%'
				or a.user_id like '%' || #{txtSearch} || '%'
				or a.user_gunbun like '%' || #{txtSearch} || '%'
				or (select org_nm from tbl_org where seq = (select p_seq from tbl_org b where a.org_seq = b.seq)) like '%' || #{txtSearch} || '%')
			</if>
		</if>
		</where>
		 OFFSET #{limitStart} LIMIT #{recordSize}
	</select>
	
	<select id="userListExcel" resultType="hashmap" parameterType="com.model.ResearchVo">
		SELECT 
		(ROW_NUMBER() OVER()) AS rownum,
			a.idx, 
			a.user_gunbun, 
			a.user_id, 
			a.pass_wd, 
			a.user_name, 
			to_char(a.insert_dt, 'YYYY-MM-DD') as insert_dt, 
			to_char(a.update_dt, 'YYYY-MM-DD') as update_dt, 
			a.kind,
			case when a.rank = '002' then '사원'
			when a.rank = '003' then '부서장'
			when a.rank = '004' then '부문장'
			when a.rank = '005' then '대표' 
			else ''
			end as rank , 
			a.discharge_dt, 
			a.org_seq,
			(select org_nm from tbl_org where seq = (select p_seq from tbl_org b where a.org_seq = b.seq)) as p_org_nm,
			(select org_nm from tbl_org where seq = (select seq from tbl_org b where a.org_seq = b.seq)) as org_nm,
			a.narasarang_no
		FROM tbl_user a

		<where>
		1=1
		<!-- <if test="org_seq != 1 "> -->
		<if test="org_seq != null and org_seq != ''">
				and a.org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		<if test="txtSearch != null " >
			<if test="keyWord == 1 " >
				and a.user_name like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 2 " >
				and a.user_id like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 3 " >
				and (select org_nm from tbl_org where seq = (select p_seq from tbl_org b where a.org_seq = b.seq)) like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 4 " >
				and a.user_gunbun like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 0 " >
				and (a.user_name like '%' || #{txtSearch} || '%'
				or a.user_id like '%' || #{txtSearch} || '%'
				or a.user_gunbun like '%' || #{txtSearch} || '%'
				or (select org_nm from tbl_org where seq = (select p_seq from tbl_org b where a.org_seq = b.seq)) like '%' || #{txtSearch} || '%')
			</if>
		</if>
		</where>
		order by enlistment_dt asc 

	</select>
	
	<select id="countListInfo" parameterType="com.model.ResearchVo" resultType="Integer">
	select count(*) as tbl_cnt
	from tbl_user
	<where>
		<if test="org_seq != 1 ">
				org_seq in (
				with recursive search_org(seq,p_seq,org_nm,org_ordr,level,path,cycle) as (
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,0,array[a.seq],false
    from tbl_org a
    where a.seq = #{org_seq}
    union all
    select a.seq,a.p_seq,a.org_nm,a.org_ordr,level+1,path || a.seq,a.seq=any(path)
    from tbl_org a, search_org so 
    where a.p_seq = so.seq and not cycle)
    select seq
    from search_org
				)
		</if>
		<if test="txtSearch != null " >
			<if test="keyWord == 1 " >
				and user_name like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 2 " >
				and user_id like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 3 " >
				and (select org_nm from tbl_org where seq = (select p_seq from tbl_org b where org_seq = b.seq)) like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 4 " >
				and user_gunbun like '%' || #{txtSearch} || '%'
			</if>
			<if test="keyWord == 0 " >
				and (user_name like '%' || #{txtSearch} || '%'
				or user_id like '%' || #{txtSearch} || '%'
				or user_gunbun like '%' || #{txtSearch} || '%'
				or (select org_nm from tbl_org where seq = (select p_seq from tbl_org b where org_seq = b.seq)) like '%' || #{txtSearch} || '%')
			</if>
		</if>
		</where>
	</select>
	
	<select id="userView" resultType="com.model.ResearchVo"  parameterType="com.model.ResearchVo">
		SELECT 
			a.idx, 
			a.user_gunbun, 
			a.user_id, 
			a.pass_wd, 
			a.user_name, 
			to_char(a.insert_dt, 'YYYY-MM-DD') as insert_dt, 
			to_char(a.update_dt, 'YYYY-MM-DD') as update_dt, 
			a.kind,
			case when a.rank = '002' then '사원'
			when a.rank = '003' then '부문장'
			when a.rank = '004' then '부서장'
			when a.rank = '005' then '대표' 
			else ''
			end as rank , 
			a.discharge_dt, 
			a.org_seq,
			(select org_nm from tbl_org where seq = (select p_seq from tbl_org b where a.org_seq = b.seq)) as org_nm,
			a.narasarang_no
		FROM tbl_user a
		<where>
				a.idx = #{idx}
		</where>
		 
	</select>
	
	
	
	
	<!-- PcController.mngrListInfo -->
	<!-- <select id="pcListInfo" resultType="com.model.PcMangrVo" parameterType="hashmap">
		SELECT 
			sgb_seq, 
			sgb_pc_status, 
			sgb_pc_cpu, 
			sgb_pc_memory, 
			sgb_pc_disk, 
			sgb_pc_macaddress, 
			sgb_pc_guid, 
			sgb_pc_ip, 
			first_date, 
			last_date,
			sgb_pc_hostname 
		FROM tbl_pc_mangr

		<where>
			
			<if test="pcMangrVo.selectOrgSeq != null and pcMangrVo.selectOrgSeq != '' ">
					org_seq = #{pcMangrVo.selectOrgSeq}
			</if>
		
		</where> 
		order by sgb_seq desc
		OFFSET #{pagingVo.limitStart} LIMIT #{pagingVo.recordSize}
		
	</select> -->
	
	
	<select id="countPcListInfo" parameterType="com.model.PcMangrVo" resultType="Integer">
		SELECT 
			count(*)  as tbl_cnt
		FROM tbl_pc_mangr
		<where>
			<if test="selectOrgSeq != null and selectOrgSeq != '' ">
					org_seq = #{selectOrgSeq}
			</if>
		</where>
	</select>
	
		
</mapper>
